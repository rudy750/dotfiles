# vim:set ft=sh :

#
# Generic "move me to my project dir" function/alias.
#
# Tries to "workon" a Python virtualenv, then (either way) switches to the
# directory in question.
#
# This means that we can A) use this for non-Python projects, and B) avoid
# having to add the 'cd' call to every. single. virtualenv's postactivate
# script.
#
# Also deactivates any currently active virtualenv, just for neatness' sake.
#

PERSONAL=~/Documents/Code
SKUNKWORKS=~/Documents/Code/skunkworks
DJANGO=/srv/django
RAILS=/srv/rails
FOLDERS="$PERSONAL $DJANGO $RAILS $SKUNKWORKS"

function wk() {
    # deactivate/workon will fail silently if project is not a virtualenv.
    deactivate 2>/dev/null
    workon $1 2>/dev/null
    # Ditto for my custom "workon" for RVM
    activate_gemset $1
    # Try to find the given folder and cd to it.
    for folder in $FOLDERS; do
        target=$folder/$1
        if [[ -d $target ]]; then
            cd $target
            return 0
        fi
    done
    return 1
}

function _wk() {
    local curw
    COMPREPLY=()
    curw=${COMP_WORDS[COMP_CWORD]}
    projects=`find $FOLDERS -mindepth 1 -maxdepth 1 -type d -exec basename {} \; 2>/dev/null`
    COMPREPLY=($(compgen -W '$projects' -- $curw))
    return 0
}

complete -F _wk wk
